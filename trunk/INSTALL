NoteEdit - a music score editor
http://noteedit.berlios.de
===============================

How to obtain NoteEdit
----------------------
You can download the latest version of NoteEdit on our project page
(http://developer.berlios.de/projects/noteedit). Please visit our website for
more information (http://noteedit.berlios.de).


Installing NoteEdit from RPMs or DEBs
-------------------------------------
If you find an RPM (RedHat/Fedora, SuSE, Mandriva) or DEB (Debian, Ubuntu)
package for your Linux distribution, you can install NoteEdit from the RPM or
DEB.

Note!
-----
You need a TSE3 package. So if you find a TSE3 RPM/DEB package for your Linux
distribution, install TSE3 first. Otherwise compile TSE3 from source
(http://tse3.sourceforge.net).

Note!
-----
If you want to use NoteEdit with aRts MIDI scheduler, make sure the aRts headers
(artsmidi.h) are installed before you compile TSE3.

To install the NoteEdit package from a binary RPM or DEB you must be logged in
as root. Assuming that the name of the package is filename.rpm or filename.deb,
do the following at the command prompt:
- For RPM based systems:
  # rpm -ivh <filename.rpm>
- For DEB based systems:
  # dpkg -i <filename.rpm>


Installation from the source
----------------------------
Requirements for source compilation
-----------------------------------
You need the following packages:
 * g++ compiler (tested with g++-3.x, usually QT/KDE needs to be compiled with
    the same major version as NoteEdit)
 * X11 (includes and libraries)
 * Qt (includes and libraries) Qtdevel2 (>=Qt-2.2.2)
 * YACC or Bison
 * LEX or flex
 * KDE3.x
 * gettext (only for text translation)
 * extractrc (from kde development) (only for text translation)

Recommended packages:
 * TSE3 library (0.2.5), see: http://tse3.sourceforge.net
   or LibKMid, see http://www.arrakis.es/~rlarrosa/libkmid.html.
   (Note: Not all features are available in this case (eg. MIDI import)!)
 * If you want to use NoteEdit with aRts MIDI scheduler: aRts (includes and
   libraries, especially artsmidi.h).

Possible export filters and its packages:
 * LilyPond (http://www.lilypond.org): Export works for all versions between
   2.0 and 2.4. For any newer version, convert-ly should correctly convert the
   syntax of exported files to the newer version. If no LilyPond found, version
   2.0 syntax is used by default.
 * MusicXML import/export (http://www.recordare.com): No special packages
   needed.
 * PMX (http://icking-music-archive.org/software/pmx/) and MusiXTeX: Basic
   export is done. Please test more complex examples! Works fine with pmx 2.5.4
   and musixtex 0.9.8.
 * ABC Music (http://moinejf.free.fr): No special packages required for export.
   Note that NoteEdit exports to abcm (improved abc) file format! Works fine
   with abcm2ps 4.8.5.
 * MIDI: TSE3 library for MIDI import/export is needed.
 * Other basic packages: LaTeX, xdvi (dvi viewer), dvips (dvi to ps converter),
   gv (postscript viewer), xpdf (pdf viewer).


Building from SVN
-----------------
Since we're currently in transition from the old non-SVN based NoteEdit to the
completely SVN-based project, it is possible that making from SVN isn't yet
possible out of the box. To build NoteEdit from SVN, do the following:
- Get the latest trunk version of NoteEdit, by typing
  $ svn checkout svn://svn.berlios.de/noteedit/trunk/noteedit noteedit
  
  for anonymous SVN access or follow Berlios'es instructions on
  https://developer.berlios.de/svn/?group_id=2232 for more secure SVN access.
  
- If the correct admin files are not present in admin/ folder, download the
  admin-files.tar.gz which can be found under files section at the NoteEdit's
  project page at Berlios and extract them to the main NoteEdit folder by
  executing:
  $ cd noteedit
  $ tar xfvz admin-files.tar.gz

- In the main NoteEdit folder, type:
  $ make -f Makefile.cvs

This should correctly generate a working configure script. From now on, follow
the normal build method below.

Note that the current SVN project organization is still in phase of testing, so
please report any problems you may encounter or success stories to the NoteEdit
devel mailing list (noteedit-devel@berlios.de) and include your configuration
in your post (version of g++, KDE, Qt, automake and Linux distribution).


Building
--------
Note!
-----
If you have different KDE/Qt versions, make sure the PATH variable only
references the KDE/Qt version you wish to use with NoteEdit!

Please uninstall an older version especially all old noteeditui.rc files. If you
don't have the source distribution to "make uninstall" remove all in
 <path_to_your_kde_installation>/share/apps/noteedit

Decompress and configure the archive:
 $ tar -xvzf noteedit-2.8.1.tgz
 $ cd noteedit-2.8.1

Now, for (t)csh:
 $ setenv QTDIR <path_to_your_qt_installation>
 $ setenv KDEDIR <path_to_your_kde_installation>

or for the other shells (bash):
 $ export QTDIR=<path_to_your_qt_installation>
 $ export KDEDIR=<path_to_your_kde_installation>

Then:
 $ ./configure --prefix=<path_to_your_kde_installation>

, whereby <path_to_your_kde_installation> is the path where KDE usually resides
on you system. You can always find out this path by invoking:
 $ kde-config --prefix

If you installed TSE3 library in an unusual directory:
 $ ./configure --with-libtse3-include=<dir_to_tse3_includes>
 --with-libtse3-libs=<dir_to_tse3_libs>

If you want to use libKMid instead of TSE3 library:
 $ ./configure --with-libkmid

 (Note: Not all features are available in this case (eg. MIDI import)!)

If you installed libKMid in an unusual directory:
 $ ./configure --with-libkmid-include=<dir_to_libkmid/libkmid.h>
 --with-libkmid-libs=<dir_to_libkmid.so>

If you won't use any library (not recommended - see above!):
 $ ./configure --without-libs

If you use LilyPond 1.2.x (deprecated):
 $ ./configure --with-oldlily

In priciple you can use the parameter --enable-final, but this is not
recommended, because the resulting code is 30% greater. This is because of the
-fexecption compiler option, which is applied to tho whole source. Without
--enable-final the -fexecption compiler option is only applied to the necessary
C modules.

Now you're ready to compile! Type:
 $ make

This should create NoteEdit from source for you. To install it, type (as root):
 # make install

If you want to remove NoteEdit from your system, type (as root):
 # make uninstall

Then start the program: It is recommended to start NoteEdit in KDE environment.
If not, then make sure the KDE binaries are in your PATH.

Type:
 $ noteedit

or:
 $ noteedit [file.not]

NoteEdit should now start. If there is an "error opening sequencer" error,
NoteEdit is unable to access your MIDI soundcard and no sounds will be heard.
If you don't know, what the problem is, please see FAQ for troubleshooting or
visit our website for more information and try to contact us.

If you have a SoundBlaster based card or other soundacard which supports
hardware MIDI, don't forget to load your orchestra (sfxload for OSS or asfxload
for ALSA) before starting NoteEdit!

First test
----------
 File --> Open examples/example1.not
or:
 File --> Open examples/example2.not
or:
 ...
or:
 File --> Open examples/example12.not

Press the play button. If you hear the music, the program works perfectly:)! If
not, then try to change the MIDI device (Settings --> Configure NoteEdit -->
Sound --> MIDI Devices).

Or (only with TSE3) change the TSE3 MIDI scheduler by unchecking the ALSA
option and restart NoteEdit:
 Settings --> Configure NoteEdit --> Sound --> Sequencers

(see also: Working with TSE3)

Note!
-----
The quality of playback depends on your soundcard and computer's performance!


The TiMidity server (only with TSE3)
------------------------------------
See README!

