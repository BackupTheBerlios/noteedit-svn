#! /usr/bin/env python

"""
help       -> scons -h
compile    -> scons
clean      -> scons -c
install    -> scons install
uninstall  -> scons -c install
configure  -> scons configure prefix=/tmp/ita debug=full extraincludes=/usr/local/include:/tmp/include prefix=/usr/local

Run from a subdirectory -> scons -u
The variables are saved automatically after the first run (look at cache/kde.cache.py, ..)
"""

###################################################################
# LOAD THE ENVIRONMENT AND SET UP THE TOOLS
###################################################################

def bstr(target, source, env):
	comp='kconfig_compiler -d%s %s %s' % (str(source[0].get_dir()), source[1].path, source[0].path)
	return comp

## Load the builders in config
env = Environment( TARGS=COMMAND_LINE_TARGETS, ARGS=ARGUMENTS, tools=['default', 'generic', 'kde','midi'], toolpath=['./', './scons_admin'])

env.KDEuse("environ rpath thread")

env['CXXCOMSTR']=bstr

###################################################################
# SCRIPTS FOR BUILDING THE TARGETS
###################################################################

## BuilDir example - try to have all sources to process in only one top-level folder
SetOption('duplicate', 'soft-copy')
env.BuildDir('#build', '#kguitar_excerpt #noteedit #doc')
env.subdirs('kguitar_excerpt noteedit doc')

############################
## Process the documentation
############################

# When it works again, uncomment and remove doc/SConscript
#env.docfolder('noteedit/', 'en', 'noteedit/')
#env.docfolder('de/', 'de', 'noteedit/')

## Normal build
#env.subdirs('kguitar_excerpt noteedit')

############################
## Process the translations
############################

## They are usually located in the po/ directory
env.KDElang('po/', 'noteedit')

###################################################################
# CONVENIENCE FUNCTIONS TO EMULATE 'make dist' and 'make distclean'
###################################################################

env.dist('noteedit')
